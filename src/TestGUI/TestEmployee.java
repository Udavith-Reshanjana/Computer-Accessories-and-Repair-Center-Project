/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package TestGUI;

import ProjectClasses.Employee;
import javax.swing.JOptionPane;

/**
 *
 * @author lenovo
 */
public class TestEmployee extends javax.swing.JFrame {

    /**
     * Creates new form TestRepair
     */
    public TestEmployee() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        employeeID = new javax.swing.JTextField();
        firstName = new javax.swing.JTextField();
        middleName = new javax.swing.JTextField();
        empLName = new javax.swing.JTextField();
        NICNumber = new javax.swing.JTextField();
        empUsername = new javax.swing.JTextField();
        empPassword = new javax.swing.JTextField();
        phoNumEmployeeID = new javax.swing.JTextField();
        empRole = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        empAddress = new javax.swing.JTextArea();
        empIDTxt = new javax.swing.JLabel();
        fNameTxt = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lNameTxt = new javax.swing.JLabel();
        empRoleTxt = new javax.swing.JLabel();
        NICTxt = new javax.swing.JLabel();
        empAddTxt = new javax.swing.JLabel();
        empUsernameTxt = new javax.swing.JLabel();
        empPasswordTxt = new javax.swing.JLabel();
        addButton = new javax.swing.JButton();
        updateButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        phoneNumber = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jProgressBar1 = new javax.swing.JProgressBar();
        phoNumAddButton = new javax.swing.JButton();
        phoNumUpdateButton = new javax.swing.JButton();
        phoNumDeleteButton = new javax.swing.JButton();
        phoNumClearButton = new javax.swing.JButton();
        updatePhoneNumber = new javax.swing.JTextField();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTable2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 255, 255));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 404, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 429, Short.MAX_VALUE)
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        firstName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstNameActionPerformed(evt);
            }
        });

        middleName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                middleNameActionPerformed(evt);
            }
        });

        NICNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NICNumberActionPerformed(evt);
            }
        });

        empUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                empUsernameActionPerformed(evt);
            }
        });

        empPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                empPasswordActionPerformed(evt);
            }
        });

        empRole.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Manager ", "Receptionalist", "Technician" }));
        empRole.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                empRoleActionPerformed(evt);
            }
        });

        empAddress.setColumns(20);
        empAddress.setRows(5);
        jScrollPane1.setViewportView(empAddress);

        empIDTxt.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        empIDTxt.setText("Employee ID");

        fNameTxt.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        fNameTxt.setText("First name");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setText("Middle Name");

        lNameTxt.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lNameTxt.setText("Last Name");

        empRoleTxt.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        empRoleTxt.setText("Role");

        NICTxt.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        NICTxt.setText("NIC");

        empAddTxt.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        empAddTxt.setText("Address");

        empUsernameTxt.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        empUsernameTxt.setText("Username");

        empPasswordTxt.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        empPasswordTxt.setText("Password");

        addButton.setText("ADD");
        addButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        updateButton.setText("UPDATE");
        updateButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        deleteButton.setText("DELETE");
        deleteButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        clearButton.setText("CLEAR");
        clearButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        phoneNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phoneNumberActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setText("Employee ID");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setText("Phone Number");

        phoNumAddButton.setText("ADD");
        phoNumAddButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        phoNumAddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phoNumAddButtonActionPerformed(evt);
            }
        });

        phoNumUpdateButton.setText("UPDATE");
        phoNumUpdateButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        phoNumUpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phoNumUpdateButtonActionPerformed(evt);
            }
        });

        phoNumDeleteButton.setText("DELETE");
        phoNumDeleteButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        phoNumDeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phoNumDeleteButtonActionPerformed(evt);
            }
        });

        phoNumClearButton.setText("CLEAR");
        phoNumClearButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        phoNumClearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phoNumClearButtonActionPerformed(evt);
            }
        });

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Employee ID ", "First Name", "Middle Name", "Last Name", "Role", "NIC", "Address", "Username", "Password"
            }
        ));
        jScrollPane5.setViewportView(jTable3);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setText("Exist Phone Number");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(employeeID, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(firstName, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(middleName))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(empIDTxt)
                        .addGap(24, 24, 24)
                        .addComponent(fNameTxt)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(lNameTxt)
                        .addGap(86, 86, 86)
                        .addComponent(empRoleTxt)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(NICTxt)
                        .addGap(60, 60, 60))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(empLName, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(empRole, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(NICNumber)
                        .addContainerGap())))
            .addComponent(jProgressBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addComponent(empUsernameTxt))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(empUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(27, 27, 27)
                                        .addComponent(empPasswordTxt))
                                    .addComponent(empPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(110, 110, 110)
                                        .addComponent(empAddTxt))))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(141, 141, 141)
                                .addComponent(addButton)
                                .addGap(27, 27, 27)
                                .addComponent(updateButton)
                                .addGap(18, 18, 18)
                                .addComponent(deleteButton)
                                .addGap(18, 18, 18)
                                .addComponent(clearButton))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(jLabel1)
                        .addGap(140, 140, 140)
                        .addComponent(jLabel2)
                        .addGap(89, 89, 89)
                        .addComponent(jLabel4))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 803, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(phoNumEmployeeID, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(47, 47, 47)
                                .addComponent(phoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31)
                                .addComponent(updatePhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(phoNumAddButton)
                                .addGap(18, 18, 18)
                                .addComponent(phoNumUpdateButton)
                                .addGap(18, 18, 18)
                                .addComponent(phoNumDeleteButton)
                                .addGap(18, 18, 18)
                                .addComponent(phoNumClearButton)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(empIDTxt)
                    .addComponent(fNameTxt)
                    .addComponent(jLabel3)
                    .addComponent(NICTxt)
                    .addComponent(lNameTxt)
                    .addComponent(empRoleTxt))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(employeeID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(middleName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NICNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(empRole, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(firstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(empLName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(empUsernameTxt)
                    .addComponent(empPasswordTxt)
                    .addComponent(empAddTxt))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addButton)
                            .addComponent(updateButton)
                            .addComponent(deleteButton)
                            .addComponent(clearButton)))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(empUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(empPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 6, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(phoNumEmployeeID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(phoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(updatePhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(phoNumAddButton)
                            .addComponent(phoNumUpdateButton)
                            .addComponent(phoNumDeleteButton)
                            .addComponent(phoNumClearButton)))
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(8, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void empUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_empUsernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_empUsernameActionPerformed

    private void NICNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NICNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NICNumberActionPerformed

    private void empRoleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_empRoleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_empRoleActionPerformed

    private void firstNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_firstNameActionPerformed

    private void empPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_empPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_empPasswordActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        // TODO add your handling code here:
        String getEmpID = employeeID.getText().trim();
        String getEmpFName = firstName.getText().trim();
        String getEmpMName = middleName.getText().trim();
        String getEmpLName = empLName.getText().trim();
        String getEmpRole = empRole.getSelectedItem().toString();
        String getEmpNICNumber = NICNumber.getText().trim();
        String getEmpUsername = empUsername.getText().trim();
        String getEmpPassword = empPassword.getText().trim();
        String getEmpAddress = empAddress.getText().trim();
        
        Employee employee = new Employee();
        
        if (getEmpID.equals("")) {
            JOptionPane.showMessageDialog(null, "Please enter an employee ID");
        }
        else if (getEmpFName.equals("")) {
            JOptionPane.showMessageDialog(null, "Please enter the first name of employee");
        }
        else if (getEmpLName.equals("")) {
            JOptionPane.showMessageDialog(null, "Please enter the last name of employee");
        }
        else if (getEmpNICNumber.equals("")) {
            JOptionPane.showMessageDialog(null, "Please enter the NIC number of employee");
        }
        else if (getEmpUsername.equals("")) {
            JOptionPane.showMessageDialog(null, "Please enter a user name");
        }
        else if (getEmpPassword.equals("")) {
            JOptionPane.showMessageDialog(null, "Please enter a password");
        }
        else if (getEmpAddress.equals("")) {
            JOptionPane.showMessageDialog(null, "Please enter the address of employee");
        }
        else if (employee.isPersonExist(getEmpID) == true) {
            JOptionPane.showMessageDialog(null, "This employee ID is already exist !!!", "Message", JOptionPane.ERROR_MESSAGE);
        }
        else if (employee.isNICValid(getEmpNICNumber) == false) {
            JOptionPane.showMessageDialog(null, "This NIC number is invalid !!!", "Message", JOptionPane.ERROR_MESSAGE);
        }
//        else if (employee.isEmailValid(getEmpAddress) == false) {
//            JOptionPane.showMessageDialog(null, "This email address is invalid !!!", "Message", JOptionPane.ERROR_MESSAGE);
//        }
        else {
            if (getEmpMName.isEmpty()) {
//                getEmpMName = null;
                employee.addPerson(getEmpID, getEmpFName, null, getEmpLName, getEmpID, getEmpAddress, getEmpRole, getEmpUsername, getEmpPassword);
            }
            else {
                employee.addPerson(getEmpID, getEmpFName, getEmpMName, getEmpLName, getEmpID, getEmpAddress, getEmpRole, getEmpUsername, getEmpPassword);
            }
            employeeID.setText("");
            firstName.setText("");
            middleName.setText("");
            empLName.setText("");
            NICNumber.setText("");
            empUsername.setText("");
            empPassword.setText("");
            empAddress.setText("");
            empRole.setSelectedIndex(0);
        }
    }//GEN-LAST:event_addButtonActionPerformed

    private void middleNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_middleNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_middleNameActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        // TODO add your handling code here:
        employeeID.setText("");
        firstName.setText("");
        middleName.setText("");
        empLName.setText("");
        NICNumber.setText("");
        empUsername.setText("");
        empPassword.setText("");
        empAddress.setText("");
        empRole.setSelectedIndex(0);
    }//GEN-LAST:event_clearButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // TODO add your handling code here:
        String getEmpID = employeeID.getText().trim(); 
        Employee employee = new Employee();
        if (getEmpID.equals("")) {
            JOptionPane.showMessageDialog(null, "Please enter an employee ID");
        }
        else if (employee.isPersonExist(getEmpID) == false) {
            JOptionPane.showMessageDialog(null, "This employee ID is not exist !!!", "Message", JOptionPane.ERROR_MESSAGE);
        }
        else {
            employee.deletePerson(getEmpID);
            employeeID.setText("");
            firstName.setText("");
            middleName.setText("");
            empLName.setText("");
            NICNumber.setText("");
            empUsername.setText("");
            empPassword.setText("");
            empAddress.setText("");
            empRole.setSelectedIndex(0);
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        // TODO add your handling code here:
        String getEmpID = employeeID.getText().trim();
        String getEmpFName = firstName.getText().trim();
        String getEmpMName = middleName.getText().trim();
        String getEmpLName = empLName.getText().trim();
        String getEmpRole = empRole.getSelectedItem().toString();
        String getEmpNICNumber = NICNumber.getText().trim();
        String getEmpUsername = empUsername.getText().trim();
        String getEmpPassword = empPassword.getText().trim();
        String getEmpAddress = empAddress.getText().trim();
        
        Employee employee = new Employee();
        
        if (getEmpFName.isEmpty()) {
            getEmpFName = null;                
        }
        if (getEmpMName.isEmpty()) {
            getEmpMName = null;                
        }
        if (getEmpLName.isEmpty()) {
            getEmpLName = null;                
        }
        if (getEmpUsername.isEmpty()) {
            getEmpUsername = null;                
        }
        if (getEmpPassword.isEmpty()) {
            getEmpPassword = null;                
        }
        if (getEmpAddress.isEmpty()) {
            getEmpAddress = null;                
        }
        
        if (getEmpNICNumber.isEmpty()) {
            getEmpNICNumber = null;
            if (getEmpID.equals("")) {
                JOptionPane.showMessageDialog(null, "Please enter an employee ID");
            }            
            else if (employee.isPersonExist(getEmpID) == false) {
                JOptionPane.showMessageDialog(null, "This employee ID is not exist !!!", "Message", JOptionPane.ERROR_MESSAGE);
            }
            else {
                employee.updatePerson(getEmpID, getEmpFName, getEmpMName, getEmpLName, getEmpNICNumber, getEmpAddress, getEmpRole, getEmpUsername, getEmpPassword);            
                employeeID.setText("");
                firstName.setText("");
                middleName.setText("");
                empLName.setText("");
                NICNumber.setText("");
                empUsername.setText("");
                empPassword.setText("");
                empAddress.setText("");
            } 
        }
        else {
            if (employee.isNICValid(getEmpNICNumber) == false && getEmpNICNumber.isEmpty() == false) {
                JOptionPane.showMessageDialog(null, "This NIC number is invalid !!!", "Message", JOptionPane.ERROR_MESSAGE);
            }
            else {
                employee.updatePerson(getEmpID, getEmpFName, getEmpMName, getEmpLName, getEmpNICNumber, getEmpAddress, getEmpRole, getEmpUsername, getEmpPassword);            
                employeeID.setText("");
                firstName.setText("");
                middleName.setText("");
                empLName.setText("");
                NICNumber.setText("");
                empUsername.setText("");
                empPassword.setText("");
                empAddress.setText("");
            } 
        }                         
    }//GEN-LAST:event_updateButtonActionPerformed

    private void phoneNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phoneNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_phoneNumberActionPerformed

    private void phoNumClearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phoNumClearButtonActionPerformed
        // TODO add your handling code here:
        phoNumEmployeeID.setText("");
        phoneNumber.setText("");
        updatePhoneNumber.setText("");
    }//GEN-LAST:event_phoNumClearButtonActionPerformed

    private void phoNumAddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phoNumAddButtonActionPerformed
        // TODO add your handling code here:
        String getEmpID = phoNumEmployeeID.getText().trim();
        String getEmpPhoneNumber = phoneNumber.getText().trim(); 
        String oldPhoneNumber = updatePhoneNumber.getText().trim();
        
        Employee employee = new Employee();
        
        if (getEmpID.equals("")) {
            JOptionPane.showMessageDialog(null, "Please enter an employee ID");
        }
        else if (getEmpPhoneNumber.equals("")) {
            JOptionPane.showMessageDialog(null, "Please enter the phone number of employee");
        }
        else if (employee.isPhoneNumberValid(getEmpPhoneNumber) == false) {
            JOptionPane.showMessageDialog(null, "This phone number is invalid. Use +9411XXXXXXX, 011XXXXXXX, or 11XXXXXXX format", "Message", JOptionPane.ERROR_MESSAGE);
        }
        else if (oldPhoneNumber.isEmpty() == false) {
            JOptionPane.showMessageDialog(null, "Please fill phone number only to add", "Message", JOptionPane.ERROR_MESSAGE);
        }
        else if (employee.isPhoneNumberValid(getEmpPhoneNumber) == false) {
            JOptionPane.showMessageDialog(null, "This phone number is invalid. Use +9411XXXXXXX, 011XXXXXXX, or 11XXXXXXX format", "Message", JOptionPane.ERROR_MESSAGE);
        }
        else if (employee.isPhoneNumberDuplicated(getEmpPhoneNumber) == true) {
            JOptionPane.showMessageDialog(null, "This phone number is already exists.", "Message", JOptionPane.ERROR_MESSAGE);
        }
        else {
            employee.addPhoneNumber(getEmpID, getEmpPhoneNumber);
            phoNumEmployeeID.setText("");
            phoneNumber.setText("");
            updatePhoneNumber.setText("");
        }
    }//GEN-LAST:event_phoNumAddButtonActionPerformed

    private void phoNumUpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phoNumUpdateButtonActionPerformed
        // TODO add your handling code here:
        String getEmpID = phoNumEmployeeID.getText().trim();
        String getEmpPhoneNumber = phoneNumber.getText().trim();
        String oldPhoneNumber = updatePhoneNumber.getText().trim();
        
        Employee employee = new Employee();
        
        if (getEmpID.equals("")) {
            JOptionPane.showMessageDialog(null, "Please enter an employee ID");
        }
        else if (getEmpPhoneNumber.equals("")) {
            JOptionPane.showMessageDialog(null, "Please enter the phone number of employee");
        }  
        else if (oldPhoneNumber.equals("")) {
            JOptionPane.showMessageDialog(null, "Please enter the old phone number of employee");
        }
        else if (employee.isPersonPhoneNumberExist(getEmpID, getEmpPhoneNumber) == true) {
            JOptionPane.showMessageDialog(null, "This employee ID & phone number are already exist !!!", "Message", JOptionPane.ERROR_MESSAGE);
        }
        else if (employee.isPhoneNumberValid(oldPhoneNumber) == false) {
            JOptionPane.showMessageDialog(null, "This old phone number is invalid. Use +9411XXXXXXX, 011XXXXXXX, or 11XXXXXXX format", "Message", JOptionPane.ERROR_MESSAGE);
        }
        else if (employee.isPhoneNumberValid(getEmpPhoneNumber) == false) {
            JOptionPane.showMessageDialog(null, "This phone number is invalid. Use +9411XXXXXXX, 011XXXXXXX, or 11XXXXXXX format", "Message", JOptionPane.ERROR_MESSAGE);
        }
        else if (employee.isPhoneNumberDuplicated(getEmpPhoneNumber) == true) {
            JOptionPane.showMessageDialog(null, "This phone number is already exists.", "Message", JOptionPane.ERROR_MESSAGE);
        }
        else {
            employee.updatePhoneNumber(getEmpID, oldPhoneNumber, getEmpPhoneNumber);
            phoNumEmployeeID.setText("");
            phoneNumber.setText("");
            updatePhoneNumber.setText("");
        }
    }//GEN-LAST:event_phoNumUpdateButtonActionPerformed

    private void phoNumDeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phoNumDeleteButtonActionPerformed
        // TODO add your handling code here:
        String getEmpID = phoNumEmployeeID.getText().trim(); 
        String getPhono = updatePhoneNumber.getText().trim();
        
        Employee employee = new Employee();
        
        if (getEmpID.equals("")) {
            JOptionPane.showMessageDialog(null, "Please enter an employee ID");
        }
        else if (getPhono.equals("") == true) {
            JOptionPane.showMessageDialog(null, "Please enter the exist phone number of employee to delete");
        }
        else if (employee.isPhoneNumberValid(getPhono) == false) {
            JOptionPane.showMessageDialog(null, "This phone number is invalid. Use +9411XXXXXXX, 011XXXXXXX, or 11XXXXXXX format", "Message", JOptionPane.ERROR_MESSAGE);
        }
        else if (employee.isPersonPhoneNumberExist(getEmpID, getEmpID) == true) {
            JOptionPane.showMessageDialog(null, "This employee ID & phone number is not exist !!!", "Message", JOptionPane.ERROR_MESSAGE);
        }
        else {
            employee.deletePhoneNumber(getEmpID, getPhono);
            phoNumEmployeeID.setText("");
            phoneNumber.setText("");
            updatePhoneNumber.setText("");
        }
    }//GEN-LAST:event_phoNumDeleteButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TestEmployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TestEmployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TestEmployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TestEmployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TestEmployee().setVisible(true);
            }
        });
        // Add a shutdown hook
        Runtime.getRuntime().addShutdownHook(new Thread(() -> {
            // This code will be executed when the JVM is shutting down
            Employee empc = new Employee();
            empc.closeConnection();
            System.out.println("Database connection was closed");
        }));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField NICNumber;
    private javax.swing.JLabel NICTxt;
    private javax.swing.JButton addButton;
    private javax.swing.JButton clearButton;
    private javax.swing.JButton deleteButton;
    private javax.swing.JLabel empAddTxt;
    private javax.swing.JTextArea empAddress;
    private javax.swing.JLabel empIDTxt;
    private javax.swing.JTextField empLName;
    private javax.swing.JTextField empPassword;
    private javax.swing.JLabel empPasswordTxt;
    private javax.swing.JComboBox<String> empRole;
    private javax.swing.JLabel empRoleTxt;
    private javax.swing.JTextField empUsername;
    private javax.swing.JLabel empUsernameTxt;
    private javax.swing.JTextField employeeID;
    private javax.swing.JLabel fNameTxt;
    private javax.swing.JTextField firstName;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JLabel lNameTxt;
    private javax.swing.JTextField middleName;
    private javax.swing.JButton phoNumAddButton;
    private javax.swing.JButton phoNumClearButton;
    private javax.swing.JButton phoNumDeleteButton;
    private javax.swing.JTextField phoNumEmployeeID;
    private javax.swing.JButton phoNumUpdateButton;
    private javax.swing.JTextField phoneNumber;
    private javax.swing.JButton updateButton;
    private javax.swing.JTextField updatePhoneNumber;
    // End of variables declaration//GEN-END:variables
}
