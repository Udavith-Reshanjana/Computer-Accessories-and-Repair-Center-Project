/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package costproject_mspcaahc;

import ProjectClasses.Employee;
import ProjectClasses.Manager;
import ProjectClasses.Receptionalist;
import ProjectClasses.Technician;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author lenovo
 */
public class EmployeeUI extends javax.swing.JFrame {

    /**
     * Creates new form EmployeeUI
     */
    public EmployeeUI() {
        initComponents();
        Employee employeeInstance = new Employee();
        employeeInstance.showPrsonDetails(employeeTable);
        employeeInstance.showPrsonContactDetails(employeeContactTable);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        customer = new javax.swing.JToggleButton();
        mainDashboard = new javax.swing.JToggleButton();
        hardware = new javax.swing.JToggleButton();
        payment = new javax.swing.JToggleButton();
        backToLogin = new javax.swing.JToggleButton();
        close = new javax.swing.JButton();
        repair = new javax.swing.JToggleButton();
        empIDTxt = new javax.swing.JLabel();
        employeeID = new javax.swing.JTextField();
        fNameTxt = new javax.swing.JLabel();
        firstName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        middleName = new javax.swing.JTextField();
        lNameTxt = new javax.swing.JLabel();
        empLName = new javax.swing.JTextField();
        empRoleTxt = new javax.swing.JLabel();
        empRole = new javax.swing.JComboBox<>();
        NICTxt = new javax.swing.JLabel();
        NICNumber = new javax.swing.JTextField();
        empUsernameTxt = new javax.swing.JLabel();
        empUsername = new javax.swing.JTextField();
        empPasswordTxt = new javax.swing.JLabel();
        empPassword = new javax.swing.JTextField();
        empAddTxt = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        empAddress = new javax.swing.JTextArea();
        addButton = new javax.swing.JButton();
        updateButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        employeeTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        phoNumEmployeeID = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        phoneNumber = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        updatePhoneNumber = new javax.swing.JTextField();
        phoNumAddButton = new javax.swing.JButton();
        phoNumUpdateButton = new javax.swing.JButton();
        phoNumDeleteButton = new javax.swing.JButton();
        phoNumClearButton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        employeeContactTable = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        backgroundImage = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setMaximumSize(new java.awt.Dimension(1366, 768));
        jPanel1.setMinimumSize(new java.awt.Dimension(1366, 768));
        jPanel1.setPreferredSize(new java.awt.Dimension(1366, 768));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        customer.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        customer.setForeground(new java.awt.Color(0, 102, 255));
        customer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8-customer-64.png"))); // NOI18N
        customer.setText("Customer");
        customer.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        customer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customerActionPerformed(evt);
            }
        });
        jPanel1.add(customer, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 300, 390, 80));

        mainDashboard.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        mainDashboard.setForeground(new java.awt.Color(0, 102, 255));
        mainDashboard.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8-dashboard-64.png"))); // NOI18N
        mainDashboard.setText("Dashboard");
        mainDashboard.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        mainDashboard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainDashboardActionPerformed(evt);
            }
        });
        jPanel1.add(mainDashboard, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 220, 390, 70));

        hardware.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        hardware.setForeground(new java.awt.Color(0, 102, 255));
        hardware.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8-hardware-64.png"))); // NOI18N
        hardware.setText("Hardware");
        hardware.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        hardware.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hardwareActionPerformed(evt);
            }
        });
        jPanel1.add(hardware, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 390, 390, 80));

        payment.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        payment.setForeground(new java.awt.Color(0, 102, 255));
        payment.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8-payment-64.png"))); // NOI18N
        payment.setText("Payment");
        payment.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        payment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paymentActionPerformed(evt);
            }
        });
        jPanel1.add(payment, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 480, 390, 70));

        backToLogin.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        backToLogin.setForeground(new java.awt.Color(0, 102, 255));
        backToLogin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8-login-64.png"))); // NOI18N
        backToLogin.setText("Back to Login");
        backToLogin.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        backToLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backToLoginActionPerformed(evt);
            }
        });
        jPanel1.add(backToLogin, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 650, 390, 80));

        close.setBackground(new java.awt.Color(255, 0, 51));
        close.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        close.setForeground(new java.awt.Color(255, 255, 255));
        close.setText("X");
        close.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeActionPerformed(evt);
            }
        });
        jPanel1.add(close, new org.netbeans.lib.awtextra.AbsoluteConstraints(1190, 0, 180, 50));

        repair.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        repair.setForeground(new java.awt.Color(0, 102, 255));
        repair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8-repair-64.png"))); // NOI18N
        repair.setText("Repair");
        repair.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        repair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                repairActionPerformed(evt);
            }
        });
        jPanel1.add(repair, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 560, 390, 80));

        empIDTxt.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        empIDTxt.setText("Employee ID");
        jPanel1.add(empIDTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 80, -1, -1));
        jPanel1.add(employeeID, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 100, 100, -1));

        fNameTxt.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        fNameTxt.setText("First name");
        jPanel1.add(fNameTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 80, -1, -1));

        firstName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstNameActionPerformed(evt);
            }
        });
        jPanel1.add(firstName, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 100, 90, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setText("Middle Name");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 80, -1, -1));

        middleName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                middleNameActionPerformed(evt);
            }
        });
        jPanel1.add(middleName, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 100, 90, -1));

        lNameTxt.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lNameTxt.setText("Last Name");
        jPanel1.add(lNameTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 80, -1, -1));
        jPanel1.add(empLName, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 100, 100, -1));

        empRoleTxt.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        empRoleTxt.setText("Role");
        jPanel1.add(empRoleTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 80, -1, -1));

        empRole.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Manager", "Receptionalist", "Technician" }));
        empRole.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                empRoleActionPerformed(evt);
            }
        });
        jPanel1.add(empRole, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 100, -1, -1));

        NICTxt.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        NICTxt.setText("NIC");
        jPanel1.add(NICTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 80, -1, -1));

        NICNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NICNumberActionPerformed(evt);
            }
        });
        jPanel1.add(NICNumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(1060, 100, 90, -1));

        empUsernameTxt.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        empUsernameTxt.setText("Username");
        jPanel1.add(empUsernameTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(1180, 80, -1, -1));

        empUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                empUsernameActionPerformed(evt);
            }
        });
        jPanel1.add(empUsername, new org.netbeans.lib.awtextra.AbsoluteConstraints(1160, 100, 90, -1));

        empPasswordTxt.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        empPasswordTxt.setText("Password");
        jPanel1.add(empPasswordTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(1280, 80, -1, -1));

        empPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                empPasswordActionPerformed(evt);
            }
        });
        jPanel1.add(empPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(1260, 100, 100, -1));

        empAddTxt.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        empAddTxt.setText("Address");
        jPanel1.add(empAddTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 140, -1, -1));

        empAddress.setColumns(20);
        empAddress.setRows(5);
        jScrollPane1.setViewportView(empAddress);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 160, 270, 60));

        addButton.setText("ADD");
        addButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });
        jPanel1.add(addButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(1042, 210, 80, -1));

        updateButton.setText("UPDATE");
        updateButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });
        jPanel1.add(updateButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(1130, 210, -1, -1));

        deleteButton.setText("DELETE");
        deleteButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });
        jPanel1.add(deleteButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(1210, 210, -1, -1));

        clearButton.setText("CLEAR");
        clearButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });
        jPanel1.add(clearButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(1290, 210, -1, -1));

        employeeTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Employee ID ", "First Name", "Middle Name", "Last Name", "Role", "NIC", "Address", "Username", "Password"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        employeeTable.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        employeeTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                employeeTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(employeeTable);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 380, 840, 170));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setText("Employee ID");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 270, -1, -1));
        jPanel1.add(phoNumEmployeeID, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 290, 140, -1));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setText("Phone Number");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 270, -1, -1));

        phoneNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phoneNumberActionPerformed(evt);
            }
        });
        jPanel1.add(phoneNumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 290, 140, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setText("Exist Phone Number");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 270, -1, -1));
        jPanel1.add(updatePhoneNumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 290, 150, -1));

        phoNumAddButton.setText("ADD");
        phoNumAddButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        phoNumAddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phoNumAddButtonActionPerformed(evt);
            }
        });
        jPanel1.add(phoNumAddButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(1042, 320, 80, -1));

        phoNumUpdateButton.setText("UPDATE");
        phoNumUpdateButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        phoNumUpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phoNumUpdateButtonActionPerformed(evt);
            }
        });
        jPanel1.add(phoNumUpdateButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(1130, 320, -1, -1));

        phoNumDeleteButton.setText("DELETE");
        phoNumDeleteButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        phoNumDeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phoNumDeleteButtonActionPerformed(evt);
            }
        });
        jPanel1.add(phoNumDeleteButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(1210, 320, -1, -1));

        phoNumClearButton.setText("CLEAR");
        phoNumClearButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        phoNumClearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phoNumClearButtonActionPerformed(evt);
            }
        });
        jPanel1.add(phoNumClearButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(1290, 320, -1, -1));

        employeeContactTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Employee ID", "Contact Number"
            }
        ));
        employeeContactTable.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        employeeContactTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                employeeContactTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(employeeContactTable);

        jPanel1.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 600, -1, 160));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 102, 204));
        jLabel5.setText("Overall Details");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 340, 200, 20));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 102, 204));
        jLabel6.setText("Employee Details");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 50, 190, 20));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 102, 204));
        jLabel7.setText("Contact Details");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 240, 200, 20));

        backgroundImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/finalEmployeeUI.png"))); // NOI18N
        jPanel1.add(backgroundImage, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1366, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 768, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void customerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customerActionPerformed
        // TODO add your handling code here:
        MainCustomerUI mainCustomerUI = new MainCustomerUI();
        this.setVisible(false);
        mainCustomerUI.setVisible(true);
    }//GEN-LAST:event_customerActionPerformed

    private void mainDashboardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainDashboardActionPerformed
        // TODO add your handling code here:
        MainDashboard mainDashboard = new MainDashboard();
        mainDashboard.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_mainDashboardActionPerformed

    private void backToLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backToLoginActionPerformed
        // TODO add your handling code here:
        MainLoginUI mainLoginUI = new MainLoginUI();
        mainLoginUI.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_backToLoginActionPerformed

    private void closeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_closeActionPerformed

    private void repairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_repairActionPerformed
        // TODO add your handling code here:
        MainRepair mainRepair = new MainRepair();
        mainRepair.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_repairActionPerformed

    private void firstNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_firstNameActionPerformed

    private void middleNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_middleNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_middleNameActionPerformed

    private void empRoleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_empRoleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_empRoleActionPerformed

    private void NICNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NICNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NICNumberActionPerformed

    private void empUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_empUsernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_empUsernameActionPerformed

    private void empPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_empPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_empPasswordActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        // TODO add your handling code here:
        String getEmpID = employeeID.getText().trim();
        String getEmpFName = firstName.getText().trim();
        String getEmpMName = middleName.getText().trim();
        String getEmpLName = empLName.getText().trim();
        String getEmpRole = empRole.getSelectedItem().toString().trim();
        String getEmpNICNumber = NICNumber.getText().trim();
        String getEmpUsername = empUsername.getText().trim();
        String getEmpPassword = empPassword.getText().trim();
        String getEmpAddress = empAddress.getText().trim();

        Employee employee = new Employee();
        Manager manager = new Manager();
        Receptionalist receptionalist = new Receptionalist();
        Technician technician = new Technician();

        if (getEmpID.equals("")) {
            JOptionPane.showMessageDialog(null, "Please enter an employee ID");
        }
        else if (employee.isPersonIDValid(getEmpID) == false) {
            JOptionPane.showMessageDialog(null, "This employee ID is not valid. Use EMP/MGT/XXX, EMP/REC/XXX, or EMP/TEC/XXX pattern !!!", "Message", JOptionPane.ERROR_MESSAGE);
        }
        else if (employee.isPersonExist(getEmpID) == true) {
            JOptionPane.showMessageDialog(null, "This employee ID is already exist !!!", "Message", JOptionPane.ERROR_MESSAGE);
        }
        else if (getEmpFName.equals("")) {
            JOptionPane.showMessageDialog(null, "Please enter the first name of employee");
        }
        else if (getEmpLName.equals("")) {
            JOptionPane.showMessageDialog(null, "Please enter the last name of employee");
        }
        else if (getEmpNICNumber.equals("")) {
            JOptionPane.showMessageDialog(null, "Please enter the NIC number of employee");
        }
        else if (employee.isNICValid(getEmpNICNumber) == false) {
            JOptionPane.showMessageDialog(null, "This NIC number is invalid !!!", "Message", JOptionPane.ERROR_MESSAGE);
        }
        else if (getEmpUsername.equals("")) {
            JOptionPane.showMessageDialog(null, "Please enter a user name");
        }
        else if (getEmpPassword.equals("")) {
            JOptionPane.showMessageDialog(null, "Please enter a password");
        }
        else if (getEmpAddress.equals("")) {
            JOptionPane.showMessageDialog(null, "Please enter the address of employee");
        }
        else if ((manager.isPersonIDValid(getEmpID) == true) && (getEmpRole.equals("Manager") == false)) {
            JOptionPane.showMessageDialog(null, "Your employee ID and role is not matched !!!", "Message", JOptionPane.ERROR_MESSAGE);
        }
        else if ((receptionalist.isPersonIDValid(getEmpID) == true) && (getEmpRole.equals("Receptionalist") == false)) {
            JOptionPane.showMessageDialog(null, "Your employee ID and role is not matched !!!", "Message", JOptionPane.ERROR_MESSAGE);
        }
        else if ((technician.isPersonIDValid(getEmpID) == true) && (getEmpRole.equals("Technician") == false)) {
            JOptionPane.showMessageDialog(null, "Your employee ID and role is not matched !!!", "Message", JOptionPane.ERROR_MESSAGE);
        }
        else {
            if (getEmpMName.isEmpty()) {
                employee.addPerson(getEmpID, getEmpFName, null, getEmpLName, getEmpNICNumber, getEmpAddress, getEmpRole, getEmpUsername, getEmpPassword);
            }
            else {
                employee.addPerson(getEmpID, getEmpFName, getEmpMName, getEmpLName, getEmpNICNumber, getEmpAddress, getEmpRole, getEmpUsername, getEmpPassword);
            }
            employeeID.setText("");
            firstName.setText("");
            middleName.setText("");
            empLName.setText("");
            NICNumber.setText("");
            empUsername.setText("");
            empPassword.setText("");
            empAddress.setText("");
            empRole.setSelectedIndex(0);
        }
        try {
            Employee employeeInstance = new Employee();
            employeeInstance.showPrsonDetails(employeeTable);
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Error occurred while loading employee data", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_addButtonActionPerformed

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        // TODO add your handling code here:
        String getEmpID = employeeID.getText().trim();
        String getEmpFName = firstName.getText().trim();
        String getEmpMName = middleName.getText().trim();
        String getEmpLName = empLName.getText().trim();
        String getEmpRole = empRole.getSelectedItem().toString();
        String getEmpNICNumber = NICNumber.getText().trim();
        String getEmpUsername = empUsername.getText().trim();
        String getEmpPassword = empPassword.getText().trim();
        String getEmpAddress = empAddress.getText().trim();

        Employee employee = new Employee();
        Manager manager = new Manager();
        Receptionalist receptionalist = new Receptionalist();
        Technician technician = new Technician();

        if (getEmpFName.isEmpty()) {
            getEmpFName = null;
        }
        if (getEmpMName.isEmpty()) {
            getEmpMName = null;
        }
        if (getEmpLName.isEmpty()) {
            getEmpLName = null;
        }
        if (getEmpUsername.isEmpty()) {
            getEmpUsername = null;
        }
        if (getEmpPassword.isEmpty()) {
            getEmpPassword = null;
        }
        if (getEmpAddress.isEmpty()) {
            getEmpAddress = null;
        }
        if ((manager.isPersonIDValid(getEmpID) == true) && (getEmpRole.equals("Manager") == false)) {
            JOptionPane.showMessageDialog(null, "Your employee ID and role is not matched !!!", "Message", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if ((receptionalist.isPersonIDValid(getEmpID) == true) && (getEmpRole.equals("Receptionalist") == false)) {
            JOptionPane.showMessageDialog(null, "Your employee ID and role is not matched !!!", "Message", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if ((technician.isPersonIDValid(getEmpID) == true) && (getEmpRole.equals("Technician") == false)) {
            JOptionPane.showMessageDialog(null, "Your employee ID and role is not matched !!!", "Message", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (getEmpNICNumber.isEmpty()) {
            getEmpNICNumber = null;
            if (getEmpID.equals("")) {
                JOptionPane.showMessageDialog(null, "Please enter an employee ID");
            }
            else if (employee.isPersonIDValid(getEmpID) == false) {
                JOptionPane.showMessageDialog(null, "This employee ID is not valid. Use EMP/MGT/XXX, EMP/REC/XXX, or EMP/TEC/XXX pattern !!!", "Message", JOptionPane.ERROR_MESSAGE);
            }
            else if (employee.isPersonExist(getEmpID) == false) {
                JOptionPane.showMessageDialog(null, "This employee ID is not exist !!!", "Message", JOptionPane.ERROR_MESSAGE);
            }
            else {
                employee.updatePerson(getEmpID, getEmpFName, getEmpMName, getEmpLName, getEmpNICNumber, getEmpAddress, getEmpRole, getEmpUsername, getEmpPassword);
                employeeID.setText("");
                firstName.setText("");
                middleName.setText("");
                empLName.setText("");
                NICNumber.setText("");
                empUsername.setText("");
                empPassword.setText("");
                empAddress.setText("");
            }
        }
        else {
            if (employee.isNICValid(getEmpNICNumber) == false && getEmpNICNumber.isEmpty() == false) {
                JOptionPane.showMessageDialog(null, "This NIC number is invalid !!!", "Message", JOptionPane.ERROR_MESSAGE);
            }
            else {
                employee.updatePerson(getEmpID, getEmpFName, getEmpMName, getEmpLName, getEmpNICNumber, getEmpAddress, getEmpRole, getEmpUsername, getEmpPassword);
                employeeID.setText("");
                firstName.setText("");
                middleName.setText("");
                empLName.setText("");
                NICNumber.setText("");
                empUsername.setText("");
                empPassword.setText("");
                empAddress.setText("");
            }
        }
        try {
            Employee employeeInstance = new Employee();
            employeeInstance.showPrsonDetails(employeeTable);
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Error occurred while loading employee data", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_updateButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // TODO add your handling code here:
        String getEmpID = employeeID.getText().trim();
        Employee employee = new Employee();
        if (getEmpID.equals("")) {
            JOptionPane.showMessageDialog(null, "Please enter an employee ID");
        }
        else if (employee.isPersonIDValid(getEmpID) == false) {
            JOptionPane.showMessageDialog(null, "This employee ID is not valid. Use EMP/MGT/XXX, EMP/REC/XXX, or EMP/TEC/XXX pattern !!!", "Message", JOptionPane.ERROR_MESSAGE);
        }
        else if (employee.isPersonExist(getEmpID) == false) {
            JOptionPane.showMessageDialog(null, "This employee ID is not exist !!!", "Message", JOptionPane.ERROR_MESSAGE);
        }
        else {
            employee.deletePerson(getEmpID);
            employeeID.setText("");
            firstName.setText("");
            middleName.setText("");
            empLName.setText("");
            NICNumber.setText("");
            empUsername.setText("");
            empPassword.setText("");
            empAddress.setText("");
            empRole.setSelectedIndex(0);
        }
        try {
            Employee employeeInstance = new Employee();
            employeeInstance.showPrsonDetails(employeeTable);
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Error occurred while loading employee data", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        // TODO add your handling code here:
        employeeID.setText("");
        firstName.setText("");
        middleName.setText("");
        empLName.setText("");
        NICNumber.setText("");
        empUsername.setText("");
        empPassword.setText("");
        empAddress.setText("");
        empRole.setSelectedIndex(0);
    }//GEN-LAST:event_clearButtonActionPerformed

    private void phoneNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phoneNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_phoneNumberActionPerformed

    private void phoNumAddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phoNumAddButtonActionPerformed
        // TODO add your handling code here:
        String getEmpID = phoNumEmployeeID.getText().trim();
        String getEmpPhoneNumber = phoneNumber.getText().trim();
        String oldPhoneNumber = updatePhoneNumber.getText().trim();

        Employee employee = new Employee();

        if (getEmpID.equals("")) {
            JOptionPane.showMessageDialog(null, "Please enter an employee ID");
        }
        else if (employee.isPersonExist(getEmpID) == false) {
            JOptionPane.showMessageDialog(null, "This employee ID not is already exist !!!", "Message", JOptionPane.ERROR_MESSAGE);
        }
        else if (getEmpPhoneNumber.equals("")) {
            JOptionPane.showMessageDialog(null, "Please enter the phone number of employee");
        }
        else if (employee.isPersonIDValid(getEmpID) == false) {
            JOptionPane.showMessageDialog(null, "This employee ID is not valid. Use EMP/MGT/XXX, EMP/REC/XXX, or EMP/TEC/XXX pattern !!!", "Message", JOptionPane.ERROR_MESSAGE);
        }
        else if (employee.isPhoneNumberValid(getEmpPhoneNumber) == false) {
            JOptionPane.showMessageDialog(null, "This phone number is invalid. Use +9411XXXXXXX, 011XXXXXXX, or 11XXXXXXX format", "Message", JOptionPane.ERROR_MESSAGE);
        }
        else if (oldPhoneNumber.isEmpty() == false) {
            JOptionPane.showMessageDialog(null, "Please fill phone number only to add", "Message", JOptionPane.ERROR_MESSAGE);
        }
        else if (employee.isPhoneNumberValid(getEmpPhoneNumber) == false) {
            JOptionPane.showMessageDialog(null, "This phone number is invalid. Use +9411XXXXXXX, 011XXXXXXX, or 11XXXXXXX format", "Message", JOptionPane.ERROR_MESSAGE);
        }
        else if (employee.isPhoneNumberDuplicated(getEmpPhoneNumber) == true) {
            JOptionPane.showMessageDialog(null, "This phone number is already exists.", "Message", JOptionPane.ERROR_MESSAGE);
        }
        else {
            employee.addPhoneNumber(getEmpID, getEmpPhoneNumber);
            phoNumEmployeeID.setText("");
            phoneNumber.setText("");
            updatePhoneNumber.setText("");
        }
        try {
            Employee employeeInstance = new Employee();
            employeeInstance.showPrsonContactDetails(employeeContactTable);
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Error occurred while loading employee contact data", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_phoNumAddButtonActionPerformed

    private void phoNumUpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phoNumUpdateButtonActionPerformed
        // TODO add your handling code here:
        String getEmpID = phoNumEmployeeID.getText().trim();
        String getEmpPhoneNumber = phoneNumber.getText().trim();
        String oldPhoneNumber = updatePhoneNumber.getText().trim();

        Employee employee = new Employee();

        if (getEmpID.equals("")) {
            JOptionPane.showMessageDialog(null, "Please enter an employee ID");
        }
        else if (getEmpPhoneNumber.equals("")) {
            JOptionPane.showMessageDialog(null, "Please enter the phone number of employee");
        }
        else if (oldPhoneNumber.equals("")) {
            JOptionPane.showMessageDialog(null, "Please enter the old phone number of employee");
        }
        else if (employee.isPersonIDValid(getEmpID) == false) {
            JOptionPane.showMessageDialog(null, "This employee ID is not valid. Use EMP/MGT/XXX, EMP/REC/XXX, or EMP/TEC/XXX pattern !!!", "Message", JOptionPane.ERROR_MESSAGE);
        }
        else if (employee.isPersonPhoneNumberExist(getEmpID, getEmpPhoneNumber) == true) {
            JOptionPane.showMessageDialog(null, "This employee ID & phone number are already exist !!!", "Message", JOptionPane.ERROR_MESSAGE);
        }
        else if (employee.isPhoneNumberValid(oldPhoneNumber) == false) {
            JOptionPane.showMessageDialog(null, "This old phone number is invalid. Use +9411XXXXXXX, 011XXXXXXX, or 11XXXXXXX format", "Message", JOptionPane.ERROR_MESSAGE);
        }
        else if (employee.isPhoneNumberValid(getEmpPhoneNumber) == false) {
            JOptionPane.showMessageDialog(null, "This phone number is invalid. Use +9411XXXXXXX, 011XXXXXXX, or 11XXXXXXX format", "Message", JOptionPane.ERROR_MESSAGE);
        }
        else if (employee.isPhoneNumberDuplicated(getEmpPhoneNumber) == true) {
            JOptionPane.showMessageDialog(null, "This phone number is already exists.", "Message", JOptionPane.ERROR_MESSAGE);
        }
        else {
            employee.updatePhoneNumber(getEmpID, oldPhoneNumber, getEmpPhoneNumber);
            phoNumEmployeeID.setText("");
            phoneNumber.setText("");
            updatePhoneNumber.setText("");
        }
        try {
            Employee employeeInstance = new Employee();
            employeeInstance.showPrsonContactDetails(employeeContactTable);
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Error occurred while loading employee contact data", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_phoNumUpdateButtonActionPerformed

    private void phoNumDeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phoNumDeleteButtonActionPerformed
        // TODO add your handling code here:
        String getEmpID = phoNumEmployeeID.getText().trim();
        String getPhono = updatePhoneNumber.getText().trim();

        Employee employee = new Employee();

        if (getEmpID.equals("")) {
            JOptionPane.showMessageDialog(null, "Please enter an employee ID");
        }
        else if (getPhono.equals("") == true) {
            JOptionPane.showMessageDialog(null, "Please enter the exist phone number of employee to delete");
        }
        else if (employee.isPersonIDValid(getEmpID) == false) {
            JOptionPane.showMessageDialog(null, "This employee ID is not valid. Use EMP/MGT/XXX, EMP/REC/XXX, or EMP/TEC/XXX pattern !!!", "Message", JOptionPane.ERROR_MESSAGE);
        }
        else if (employee.isPhoneNumberValid(getPhono) == false) {
            JOptionPane.showMessageDialog(null, "This phone number is invalid. Use +9411XXXXXXX, 011XXXXXXX, or 11XXXXXXX format", "Message", JOptionPane.ERROR_MESSAGE);
        }
        else if (employee.isPersonPhoneNumberExist(getEmpID, getPhono) == false) {
            JOptionPane.showMessageDialog(null, "This employee ID & phone number is not exist !!!", "Message", JOptionPane.ERROR_MESSAGE);
        }
        else {
            employee.deletePhoneNumber(getEmpID, getPhono);
            phoNumEmployeeID.setText("");
            phoneNumber.setText("");
            updatePhoneNumber.setText("");
        }
        try {
            Employee employeeInstance = new Employee();
            employeeInstance.showPrsonContactDetails(employeeContactTable);
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Error occurred while loading employee contact data", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_phoNumDeleteButtonActionPerformed

    private void phoNumClearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phoNumClearButtonActionPerformed
        // TODO add your handling code here:
        phoNumEmployeeID.setText("");
        phoneNumber.setText("");
        updatePhoneNumber.setText("");
    }//GEN-LAST:event_phoNumClearButtonActionPerformed

    private void employeeTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_employeeTableMouseClicked
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) employeeTable.getModel();

        int selectedRow = employeeTable.getSelectedRow();

        // Check if a row is selected
        if (selectedRow != -1) {
            String tabEmpID = getStringValue(model.getValueAt(selectedRow, 0));
            String tabEmpFName = getStringValue(model.getValueAt(selectedRow, 1));
            String tabEmpMName = getStringValue(model.getValueAt(selectedRow, 2));
            String tabEmpLName = getStringValue(model.getValueAt(selectedRow, 3));
            String tabEmpRole = getStringValue(model.getValueAt(selectedRow, 4)).trim();
            String tabEmpNIC = getStringValue(model.getValueAt(selectedRow, 5));
            String tabEmpAdd = getStringValue(model.getValueAt(selectedRow, 6));
            String tabEmpUserName = getStringValue(model.getValueAt(selectedRow, 7));
            String tabEmpPWord = getStringValue(model.getValueAt(selectedRow, 8));

            // Update your UI components with the values
            employeeID.setText(tabEmpID);
            firstName.setText(tabEmpFName);
            middleName.setText(tabEmpMName);
            empLName.setText(tabEmpLName);
            NICNumber.setText(tabEmpNIC);
            empAddress.setText(tabEmpAdd);
            empUsername.setText(tabEmpUserName);
            empPassword.setText(tabEmpPWord);
            if (tabEmpRole.equalsIgnoreCase("Manager")) {
                empRole.setSelectedIndex(0);
            } else if (tabEmpRole.equalsIgnoreCase("Receptionalist")) {
                empRole.setSelectedIndex(1);
            }
            else {
                empRole.setSelectedIndex(2);
            }
        }
    }

    // Helper method to handle null values
    private String getStringValue(Object value) {
        return (value != null) ? value.toString() : "";
    }//GEN-LAST:event_employeeTableMouseClicked

    private void employeeContactTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_employeeContactTableMouseClicked
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) employeeContactTable.getModel();
        String tabEmpID = getStringValue(model.getValueAt(employeeContactTable.getSelectedRow(), 0)).toString();
        String tabEmpPno = getStringValue(model.getValueAt(employeeContactTable.getSelectedRow(), 1)).toString();
        phoNumEmployeeID.setText(tabEmpID);
        updatePhoneNumber.setText(tabEmpPno);
    }//GEN-LAST:event_employeeContactTableMouseClicked

    private void hardwareActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hardwareActionPerformed
        // TODO add your handling code here:
        HardwareUI hardwareUI = new HardwareUI();
        hardwareUI.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_hardwareActionPerformed

    private void paymentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paymentActionPerformed
        // TODO add your handling code here:
        MainPayment mainPayment = new MainPayment();
        mainPayment.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_paymentActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EmployeeUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EmployeeUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EmployeeUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EmployeeUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EmployeeUI().setVisible(true);
            }
        });        
        Runtime.getRuntime().addShutdownHook(new Thread(() -> {
            // This code will be executed when the JVM is shutting down
            Employee employee = new Employee();
            employee.closeConnection();
            System.out.println("Database connection was closed");
        }));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField NICNumber;
    private javax.swing.JLabel NICTxt;
    private javax.swing.JButton addButton;
    private javax.swing.JToggleButton backToLogin;
    private javax.swing.JLabel backgroundImage;
    private javax.swing.JButton clearButton;
    private javax.swing.JButton close;
    private javax.swing.JToggleButton customer;
    private javax.swing.JButton deleteButton;
    private javax.swing.JLabel empAddTxt;
    private javax.swing.JTextArea empAddress;
    private javax.swing.JLabel empIDTxt;
    private javax.swing.JTextField empLName;
    private javax.swing.JTextField empPassword;
    private javax.swing.JLabel empPasswordTxt;
    private javax.swing.JComboBox<String> empRole;
    private javax.swing.JLabel empRoleTxt;
    private javax.swing.JTextField empUsername;
    private javax.swing.JLabel empUsernameTxt;
    private javax.swing.JTable employeeContactTable;
    private javax.swing.JTextField employeeID;
    private javax.swing.JTable employeeTable;
    private javax.swing.JLabel fNameTxt;
    private javax.swing.JTextField firstName;
    private javax.swing.JToggleButton hardware;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lNameTxt;
    private javax.swing.JToggleButton mainDashboard;
    private javax.swing.JTextField middleName;
    private javax.swing.JToggleButton payment;
    private javax.swing.JButton phoNumAddButton;
    private javax.swing.JButton phoNumClearButton;
    private javax.swing.JButton phoNumDeleteButton;
    private javax.swing.JTextField phoNumEmployeeID;
    private javax.swing.JButton phoNumUpdateButton;
    private javax.swing.JTextField phoneNumber;
    private javax.swing.JToggleButton repair;
    private javax.swing.JButton updateButton;
    private javax.swing.JTextField updatePhoneNumber;
    // End of variables declaration//GEN-END:variables
}
