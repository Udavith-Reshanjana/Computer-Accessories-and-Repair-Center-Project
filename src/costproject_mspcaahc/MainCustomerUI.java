/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package costproject_mspcaahc;

import ProjectClasses.Customer;
import ProjectClasses.NormalCustomer;
import ProjectClasses.WholeSaleCustomer;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author lenovo
 */
public class MainCustomerUI extends javax.swing.JFrame {

    private Customer customer;
    private WholeSaleCustomer wholeSaleCustomer;
    private NormalCustomer normalCustomer;
    /**
     * Creates new form MainCustomerUI
     */
    public MainCustomerUI() {
        initComponents();
        customer = new Customer();
        customer.showPrsonContactDetails(customerContactDetails);
        customer.showPrsonDetails(customerDetails);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        Dashboard = new javax.swing.JToggleButton();
        employee = new javax.swing.JToggleButton();
        hardware = new javax.swing.JToggleButton();
        payment = new javax.swing.JToggleButton();
        repair = new javax.swing.JToggleButton();
        backToLogin = new javax.swing.JToggleButton();
        close = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        cusIDTxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        cusNameTxt = new javax.swing.JTextField();
        cusTypeTxt = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        NICTxt = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        cusUsernameTxt = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        cusPasswordTxt = new javax.swing.JTextField();
        getOrUpdateQrButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        updateButton = new javax.swing.JButton();
        addButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        cusAddTxt = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        phoNoEmpIDTxt = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        phoNoTxt = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        oldPhoNoTxt = new javax.swing.JTextField();
        addPhoNoBurtton = new javax.swing.JButton();
        phoNoUpdateButton = new javax.swing.JButton();
        phoNoDeleteButton = new javax.swing.JButton();
        phoNoClearButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        customerDetails = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        customerContactDetails = new javax.swing.JTable();
        searchCustomerButton = new javax.swing.JButton();
        CustomerBackground = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setMaximumSize(new java.awt.Dimension(1366, 768));
        jPanel1.setMinimumSize(new java.awt.Dimension(1366, 768));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Dashboard.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        Dashboard.setForeground(new java.awt.Color(0, 102, 255));
        Dashboard.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8-dashboard-64.png"))); // NOI18N
        Dashboard.setText("Dashboard");
        Dashboard.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Dashboard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DashboardActionPerformed(evt);
            }
        });
        jPanel1.add(Dashboard, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 210, 390, 80));

        employee.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        employee.setForeground(new java.awt.Color(0, 102, 255));
        employee.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8-employee-64.png"))); // NOI18N
        employee.setText("Employee");
        employee.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        employee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                employeeActionPerformed(evt);
            }
        });
        jPanel1.add(employee, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 300, 390, 80));

        hardware.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        hardware.setForeground(new java.awt.Color(0, 102, 255));
        hardware.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8-hardware-64.png"))); // NOI18N
        hardware.setText("Hardware");
        hardware.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        hardware.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hardwareActionPerformed(evt);
            }
        });
        jPanel1.add(hardware, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 390, 390, 80));

        payment.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        payment.setForeground(new java.awt.Color(0, 102, 255));
        payment.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8-payment-64.png"))); // NOI18N
        payment.setText("Payment");
        payment.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        payment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paymentActionPerformed(evt);
            }
        });
        jPanel1.add(payment, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 480, 390, 80));

        repair.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        repair.setForeground(new java.awt.Color(0, 102, 255));
        repair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8-repair-64.png"))); // NOI18N
        repair.setText("Repair");
        repair.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        repair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                repairActionPerformed(evt);
            }
        });
        jPanel1.add(repair, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 580, 390, 80));

        backToLogin.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        backToLogin.setForeground(new java.awt.Color(0, 102, 255));
        backToLogin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8-login-64.png"))); // NOI18N
        backToLogin.setText("Back to Login");
        backToLogin.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        backToLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backToLoginActionPerformed(evt);
            }
        });
        jPanel1.add(backToLogin, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 670, 390, 80));

        close.setBackground(new java.awt.Color(255, 0, 51));
        close.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        close.setForeground(new java.awt.Color(255, 255, 255));
        close.setText("X");
        close.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeActionPerformed(evt);
            }
        });
        jPanel1.add(close, new org.netbeans.lib.awtextra.AbsoluteConstraints(1190, 0, 180, 50));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Customer ID");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 60, -1, -1));
        jPanel1.add(cusIDTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 90, 120, -1));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Customer Name");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 60, -1, -1));
        jPanel1.add(cusNameTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 90, 120, -1));

        cusTypeTxt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Normal", "Wholesale" }));
        jPanel1.add(cusTypeTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 90, 120, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Type");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 60, -1, -1));
        jPanel1.add(NICTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 90, 110, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("NIC");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 60, -1, -1));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("User name");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(1140, 60, -1, -1));
        jPanel1.add(cusUsernameTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(1110, 90, 110, -1));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("Password");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(1270, 60, -1, -1));
        jPanel1.add(cusPasswordTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(1250, 90, 110, -1));

        getOrUpdateQrButton.setText("GET/ UPDATE QR");
        getOrUpdateQrButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        getOrUpdateQrButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getOrUpdateQrButtonActionPerformed(evt);
            }
        });
        jPanel1.add(getOrUpdateQrButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(1110, 180, 170, 30));

        clearButton.setText("CLEAR");
        clearButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });
        jPanel1.add(clearButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(1280, 240, -1, -1));

        deleteButton.setText("DELETE");
        deleteButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });
        jPanel1.add(deleteButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(1190, 240, -1, -1));

        updateButton.setText("UPDATE");
        updateButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });
        jPanel1.add(updateButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 240, -1, -1));

        addButton.setText("ADD");
        addButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });
        jPanel1.add(addButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(1002, 240, 80, -1));

        cusAddTxt.setColumns(20);
        cusAddTxt.setRows(5);
        jScrollPane1.setViewportView(cusAddTxt);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 170, 280, -1));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Address");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 140, -1, -1));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 0));
        jLabel8.setText("Customer ID");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 310, -1, -1));
        jPanel1.add(phoNoEmpIDTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 330, 120, -1));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 0));
        jLabel9.setText("Phone Number");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 310, -1, -1));
        jPanel1.add(phoNoTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 330, 120, -1));

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 0));
        jLabel10.setText("Exist Phone Number");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 310, -1, -1));
        jPanel1.add(oldPhoNoTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 330, 140, -1));

        addPhoNoBurtton.setText("ADD");
        addPhoNoBurtton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addPhoNoBurtton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPhoNoBurttonActionPerformed(evt);
            }
        });
        jPanel1.add(addPhoNoBurtton, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 370, 90, -1));

        phoNoUpdateButton.setText("UPDATE");
        phoNoUpdateButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        phoNoUpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phoNoUpdateButtonActionPerformed(evt);
            }
        });
        jPanel1.add(phoNoUpdateButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 370, -1, -1));

        phoNoDeleteButton.setText("DELETE");
        phoNoDeleteButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        phoNoDeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phoNoDeleteButtonActionPerformed(evt);
            }
        });
        jPanel1.add(phoNoDeleteButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(1190, 370, -1, -1));

        phoNoClearButton.setText("CLEAR");
        phoNoClearButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        phoNoClearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phoNoClearButtonActionPerformed(evt);
            }
        });
        jPanel1.add(phoNoClearButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(1280, 370, -1, -1));

        customerDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Customer ID", "Customer Name", "Type", "NIC", "Address", "Username", "Password"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        customerDetails.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        customerDetails.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                customerDetailsMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(customerDetails);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 420, 820, 190));

        customerContactDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Customer ID", "Contact Number"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        customerContactDetails.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        customerContactDetails.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                customerContactDetailsMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(customerContactDetails);

        jPanel1.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 620, -1, 140));

        searchCustomerButton.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        searchCustomerButton.setForeground(new java.awt.Color(0, 102, 255));
        searchCustomerButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8-search-64.png"))); // NOI18N
        searchCustomerButton.setText("Search Customer");
        searchCustomerButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        searchCustomerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchCustomerButtonActionPerformed(evt);
            }
        });
        jPanel1.add(searchCustomerButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(1110, 670, 250, 90));

        CustomerBackground.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/finalMainCustomerUI.png"))); // NOI18N
        jPanel1.add(CustomerBackground, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1366, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 768, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void DashboardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DashboardActionPerformed
        // TODO add your handling code here:
        MainDashboard mainDashboard = new MainDashboard();
        this.setVisible(false);
        mainDashboard.setVisible(true);
    }//GEN-LAST:event_DashboardActionPerformed

    private void employeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_employeeActionPerformed
        // TODO add your handling code here:
        EmployeeUI employeeUI = new EmployeeUI();
        employeeUI.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_employeeActionPerformed

    private void hardwareActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hardwareActionPerformed
        // TODO add your handling code here:
        HardwareUI hardwareUI = new HardwareUI();
        hardwareUI.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_hardwareActionPerformed

    private void repairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_repairActionPerformed
        // TODO add your handling code here:
        MainRepair mainRepair = new MainRepair();
        mainRepair.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_repairActionPerformed

    private void backToLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backToLoginActionPerformed
        // TODO add your handling code here:
        MainLoginUI mainLoginUI = new MainLoginUI();
        mainLoginUI.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_backToLoginActionPerformed

    private void closeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_closeActionPerformed

    private void getOrUpdateQrButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getOrUpdateQrButtonActionPerformed
        // TODO add your handling code here:
        String getCusID = cusIDTxt.getText().trim();
        String getCusTypeTxt = cusTypeTxt.getSelectedItem().toString();

        customer = new Customer();
        wholeSaleCustomer = new WholeSaleCustomer();

        if (getCusID.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please enter a customer ID");
        } else if (!wholeSaleCustomer.isPersonIDValid(getCusID)) {
            JOptionPane.showMessageDialog(null, "This customer ID is not valid. Use CUS/W/XXXXX pattern !!!", "Message", JOptionPane.ERROR_MESSAGE);
        } else if (!customer.isPersonExist(getCusID)) {
            JOptionPane.showMessageDialog(null, "This customer ID does not exist !!!", "Message", JOptionPane.ERROR_MESSAGE);
        } else if (wholeSaleCustomer.isPersonIDValid(getCusID) && getCusTypeTxt.equals("Normal")) {
            JOptionPane.showMessageDialog(null, "Your customer role should be Wholesale !!!", "Message", JOptionPane.ERROR_MESSAGE);
        }
        else {
            JFileChooser fileChooser = new JFileChooser();
            fileChooser.setDialogTitle("Choose a location to save the QR code");
            fileChooser.setFileFilter(new FileNameExtensionFilter("PNG files", "png"));

            int userSelection = fileChooser.showSaveDialog(null);
            if (userSelection == JFileChooser.APPROVE_OPTION) {
                File selectedFile = fileChooser.getSelectedFile();
                String filePath = selectedFile.getAbsolutePath();
                wholeSaleCustomer.generateQRCode(getCusID, filePath);
            } else {
                System.out.println("User canceled the operation.");
            }
        }
    }//GEN-LAST:event_getOrUpdateQrButtonActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        // TODO add your handling code here:
        cusIDTxt.setText("");
        cusNameTxt.setText("");
        cusTypeTxt.setSelectedIndex(0);
        NICTxt.setText("");
        cusAddTxt.setText("");
        cusUsernameTxt.setText("");
        cusPasswordTxt.setText("");
    }//GEN-LAST:event_clearButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // TODO add your handling code here:
        String getCusID = cusIDTxt.getText().trim();
        customer = new Customer();
        if (getCusID.equals("")) {
            JOptionPane.showMessageDialog(null, "Please enter a customer ID");
        }
        else if (customer.isPersonIDValid(getCusID) == false) {
            JOptionPane.showMessageDialog(null, "This customer ID is not valid. Use CUS/N/XXXXX or CUS/W/XXXXX pattern !!!", "Message", JOptionPane.ERROR_MESSAGE);
        }
        else if (customer.isPersonExist(getCusID) == false) {
            JOptionPane.showMessageDialog(null, "This customer ID is not exist !!!", "Message", JOptionPane.ERROR_MESSAGE);
        }
        else {
            customer.deletePerson(getCusID);
            cusIDTxt.setText("");
            cusNameTxt.setText("");
            cusTypeTxt.setSelectedIndex(0);
            NICTxt.setText("");
            cusAddTxt.setText("");
            cusUsernameTxt.setText("");
            cusPasswordTxt.setText("");
            try {
                customer.showPrsonDetails(customerDetails);
            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(null, "Error occurred while loading customer data", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        // TODO add your handling code here:
        String getCusID = cusIDTxt.getText().trim();
        String getCusNameTxt = cusNameTxt.getText().trim();
        String getCusTypeTxt = cusTypeTxt.getSelectedItem().toString();
        String getCusNICNumber = NICTxt.getText().trim();
        String getCusUsername = cusUsernameTxt.getText().trim();
        String getCusPassword = cusPasswordTxt.getText().trim();
        String getCusAddress = cusAddTxt.getText().trim();

        customer = new Customer();
        wholeSaleCustomer = new WholeSaleCustomer();
        normalCustomer = new NormalCustomer();

        if (getCusNameTxt.isEmpty()) {
            getCusNameTxt = null;
        }
        if (getCusUsername.isEmpty()) {
            getCusUsername = null;
        }
        if (getCusPassword.isEmpty()) {
            getCusPassword = null;
        }
        if (getCusAddress.isEmpty()) {
            getCusAddress = null;
        }
        if (getCusID.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please enter a customer ID");
        } else if (!customer.isPersonIDValid(getCusID)) {
            JOptionPane.showMessageDialog(null, "This customer ID is not valid. Use CUS/N/XXXXX or CUS/W/XXXXX pattern !!!", "Message", JOptionPane.ERROR_MESSAGE);
        } else if (!customer.isPersonExist(getCusID)) {
            JOptionPane.showMessageDialog(null, "This customer ID does not exist !!!", "Message", JOptionPane.ERROR_MESSAGE);
        } else if (wholeSaleCustomer.isPersonIDValid(getCusID) && getCusTypeTxt.equals("Normal")) {
            JOptionPane.showMessageDialog(null, "Your customer role should be Wholesale !!!", "Message", JOptionPane.ERROR_MESSAGE);
        } else if (normalCustomer.isPersonIDValid(getCusID) && getCusTypeTxt.equals("Wholesale")) {
            JOptionPane.showMessageDialog(null, "Your customer role should be Normal !!!", "Message", JOptionPane.ERROR_MESSAGE);
        } else {
            if (!getCusNICNumber.isEmpty() && !customer.isNICValid(getCusNICNumber)) {
                JOptionPane.showMessageDialog(null, "This NIC number is invalid !!!", "Message", JOptionPane.ERROR_MESSAGE);
            } else {
                customer.updateCustomer(getCusID, getCusNameTxt, getCusTypeTxt, getCusNICNumber, getCusAddress, getCusUsername, getCusPassword);
                cusIDTxt.setText("");
                cusNameTxt.setText("");
                cusTypeTxt.setSelectedIndex(0);
                NICTxt.setText("");
                cusAddTxt.setText("");
                cusUsernameTxt.setText("");
                cusPasswordTxt.setText("");

                try {
                    customer.showPrsonDetails(customerDetails);
                } catch (Exception e) {
                    e.printStackTrace();
                    JOptionPane.showMessageDialog(null, "Error occurred while loading customer data", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_updateButtonActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        // TODO add your handling code here:
        String getCusID = cusIDTxt.getText().trim();
        String getCusNameTxt = cusNameTxt.getText().trim();
        String getCusTypeTxt = cusTypeTxt.getSelectedItem().toString();
        String getCusNICNumber = NICTxt.getText().trim();
        String getCusUsername = cusUsernameTxt.getText().trim();
        String getCusPassword = cusPasswordTxt.getText().trim();
        String getCusAddress = cusAddTxt.getText().trim();

        customer = new Customer();
        wholeSaleCustomer = new WholeSaleCustomer();
        normalCustomer = new NormalCustomer();

        if (getCusID.equals("")) {
            JOptionPane.showMessageDialog(null, "Please enter a customer ID");
        }
        else if (customer.isPersonIDValid(getCusID) == false) {
            JOptionPane.showMessageDialog(null, "This customer ID is not valid. Use CUS/N/XXXXX or CUS/W/XXXXX pattern !!!", "Message", JOptionPane.ERROR_MESSAGE);
        }
        else if (customer.isPersonExist(getCusID) == true) {
            JOptionPane.showMessageDialog(null, "This customer ID is already exist !!!", "Message", JOptionPane.ERROR_MESSAGE);
        }
        else if (getCusNameTxt.equals("")) {
            JOptionPane.showMessageDialog(null, "Please enter the name of customer");
        }
        else if (getCusNICNumber.equals("")) {
            JOptionPane.showMessageDialog(null, "Please enter the NIC number of customer");
        }
        else if (customer.isNICValid(getCusNICNumber) == false) {
            JOptionPane.showMessageDialog(null, "This NIC number is invalid !!!", "Message", JOptionPane.ERROR_MESSAGE);
        }
        else if (customer.isNICExist(getCusNICNumber) == true) {
            JOptionPane.showMessageDialog(null, "This NIC number is already exist !!!", "Message", JOptionPane.ERROR_MESSAGE);
        }
        else if (getCusAddress.equals("")) {
            JOptionPane.showMessageDialog(null, "Please enter the address of customer");
        }
        else if (normalCustomer.isPersonIDValid(getCusID) && getCusTypeTxt.equals("Wholesale")) {
            JOptionPane.showMessageDialog(null, "Your customer role should be Normal !!!", "Message", JOptionPane.ERROR_MESSAGE);
        } 
        else {
            if (wholeSaleCustomer.isPersonIDValid(getCusID) == true) {
                if (getCusUsername.equals("")) {
                    JOptionPane.showMessageDialog(null, "Please enter a user name");
                    return;
                }
                else if (getCusPassword.equals("")) {
                    JOptionPane.showMessageDialog(null, "Please enter a password");
                    return;
                }
                else if (getCusTypeTxt.equals("Normal")) {
                    JOptionPane.showMessageDialog(null, "Your customer role should be Wholesale !!!", "Message", JOptionPane.ERROR_MESSAGE);
                    return;
                }
                else {
                    
                    customer.addPerson(getCusID, getCusNameTxt, "Wholesale", getCusNICNumber, getCusAddress, getCusUsername, getCusPassword);
                    JFileChooser fileChooser = new JFileChooser();
                    fileChooser.setDialogTitle("Choose a location to save the QR code");
                    fileChooser.setFileFilter(new FileNameExtensionFilter("PNG files", "png"));

                    int userSelection = fileChooser.showSaveDialog(null);
                    if (userSelection == JFileChooser.APPROVE_OPTION) {
                        File selectedFile = fileChooser.getSelectedFile();
                        String filePath = selectedFile.getAbsolutePath();
                        wholeSaleCustomer.generateQRCode(getCusID, filePath);
                    } else {
                        System.out.println("User canceled the operation.");
                    }
                }
            }
            else {
                customer.addPerson(getCusID, getCusNameTxt, "Normal", getCusNICNumber, getCusAddress, null, null);           
            }
            cusIDTxt.setText("");
            cusNameTxt.setText("");
            cusTypeTxt.setSelectedIndex(0);
            NICTxt.setText("");
            cusAddTxt.setText("");
            cusUsernameTxt.setText("");
            cusPasswordTxt.setText(""); 
            try {
                customer.showPrsonDetails(customerDetails);
            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(null, "Error occurred while loading customer data", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_addButtonActionPerformed

    private void addPhoNoBurttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPhoNoBurttonActionPerformed
        // TODO add your handling code here:
        String getCusID = phoNoEmpIDTxt.getText().trim();
        String getCusPhoneNumber = phoNoTxt.getText().trim();
        String oldCusPhoneNumber = oldPhoNoTxt.getText().trim();

        customer = new Customer();

        if (getCusID.equals("")) {
            JOptionPane.showMessageDialog(null, "Please enter a customer ID");
        }
        else if (customer.isPersonIDValid(getCusID) == false) {
            JOptionPane.showMessageDialog(null, "This customer ID is not valid. Use CUS/N/XXXXX or CUS/W/XXXXX pattern !!!", "Message", JOptionPane.ERROR_MESSAGE);
        }
        else if (customer.isPersonExist(getCusID) == false) {
            JOptionPane.showMessageDialog(null, "This customer ID is not exist !!!", "Message", JOptionPane.ERROR_MESSAGE);
        }
        else if (getCusPhoneNumber.equals("")) {
            JOptionPane.showMessageDialog(null, "Please enter the phone number of customer");
        }
        else if (customer.isPhoneNumberValid(getCusPhoneNumber) == false) {
            JOptionPane.showMessageDialog(null, "This phone number is invalid. Use +9411XXXXXXX, 011XXXXXXX, or 11XXXXXXX format", "Message", JOptionPane.ERROR_MESSAGE);
        }
        else if (oldCusPhoneNumber.isEmpty() == false) {
            JOptionPane.showMessageDialog(null, "Please fill phone number only to add", "Message", JOptionPane.ERROR_MESSAGE);
        }
        else if (customer.isPhoneNumberValid(getCusPhoneNumber) == false) {
            JOptionPane.showMessageDialog(null, "This phone number is invalid. Use +9411XXXXXXX, 011XXXXXXX, or 11XXXXXXX format", "Message", JOptionPane.ERROR_MESSAGE);
        }
        else if (customer.isPhoneNumberDuplicated(getCusPhoneNumber) == true) {
            JOptionPane.showMessageDialog(null, "This phone number is already exists.", "Message", JOptionPane.ERROR_MESSAGE);
        }
        else {
            customer.addPhoneNumber(getCusID, getCusPhoneNumber);
            phoNoEmpIDTxt.setText("");
            phoNoTxt.setText("");
            oldPhoNoTxt.setText("");
            try {
                customer.showPrsonContactDetails(customerContactDetails);
            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(null, "Error occurred while loading employee contact data", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_addPhoNoBurttonActionPerformed

    private void phoNoUpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phoNoUpdateButtonActionPerformed
        // TODO add your handling code here:
        String getCusID = phoNoEmpIDTxt.getText().trim();
        String getCusPhoneNumber = phoNoTxt.getText().trim();
        String oldCusPhoneNumber = oldPhoNoTxt.getText().trim();

        customer = new Customer();

        if (getCusID.equals("")) {
            JOptionPane.showMessageDialog(null, "Please enter a customer ID");
        }
        else if (getCusPhoneNumber.equals("")) {
            JOptionPane.showMessageDialog(null, "Please enter the phone number of customer");
        }
        else if (oldCusPhoneNumber.equals("")) {
            JOptionPane.showMessageDialog(null, "Please enter the old phone number of customer");
        }
        else if (customer.isPersonIDValid(getCusID) == false) {
            JOptionPane.showMessageDialog(null, "This customer ID is not valid. Use CUS/N/XXXXX or CUS/W/XXXXX pattern !!!", "Message", JOptionPane.ERROR_MESSAGE);
        }
        else if (customer.isPersonPhoneNumberExist(getCusID, getCusPhoneNumber) == true) {
            JOptionPane.showMessageDialog(null, "This customer ID & phone number are already exist !!!", "Message", JOptionPane.ERROR_MESSAGE);
        }
        else if (customer.isPhoneNumberValid(oldCusPhoneNumber) == false) {
            JOptionPane.showMessageDialog(null, "This old phone number is invalid. Use +9411XXXXXXX, 011XXXXXXX, or 11XXXXXXX format", "Message", JOptionPane.ERROR_MESSAGE);
        }
        else if (customer.isPhoneNumberValid(getCusPhoneNumber) == false) {
            JOptionPane.showMessageDialog(null, "This phone number is invalid. Use +9411XXXXXXX, 011XXXXXXX, or 11XXXXXXX format", "Message", JOptionPane.ERROR_MESSAGE);
        }
        else if (customer.isPhoneNumberDuplicated(getCusPhoneNumber) == true) {
            JOptionPane.showMessageDialog(null, "This phone number is already exists.", "Message", JOptionPane.ERROR_MESSAGE);
        }
        else {
            customer.updatePhoneNumber(getCusID, oldCusPhoneNumber, getCusPhoneNumber);
            phoNoEmpIDTxt.setText("");
            phoNoTxt.setText("");
            oldPhoNoTxt.setText("");
        }
        try {
            customer.showPrsonContactDetails(customerContactDetails);
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Error occurred while loading employee contact data", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_phoNoUpdateButtonActionPerformed

    private void phoNoDeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phoNoDeleteButtonActionPerformed
        // TODO add your handling code here:
        String getCusID = phoNoEmpIDTxt.getText().trim();
        String oldCusPhoneNumber = oldPhoNoTxt.getText().trim();

        customer = new Customer();

        if (getCusID.equals("")) {
            JOptionPane.showMessageDialog(null, "Please enter a customer ID");
        }
        else if (oldCusPhoneNumber.equals("") == true) {
            JOptionPane.showMessageDialog(null, "Please enter the exist phone number of customer to delete");
        }
        else if (customer.isPersonIDValid(getCusID) == false) {
            JOptionPane.showMessageDialog(null, "This customer ID is not valid. Use CUS/N/XXXXX or CUS/W/XXXXX pattern !!!", "Message", JOptionPane.ERROR_MESSAGE);
        }
        else if (customer.isPhoneNumberValid(oldCusPhoneNumber) == false) {
            JOptionPane.showMessageDialog(null, "This phone number is invalid. Use +9411XXXXXXX, 011XXXXXXX, or 11XXXXXXX format", "Message", JOptionPane.ERROR_MESSAGE);
        }
        else if (customer.isPersonPhoneNumberExist(getCusID, oldCusPhoneNumber) == false) {
            JOptionPane.showMessageDialog(null, "This customer ID & phone number is not exist !!!", "Message", JOptionPane.ERROR_MESSAGE);
        }
        else {
            customer.deletePhoneNumber(getCusID, oldCusPhoneNumber);
            phoNoEmpIDTxt.setText("");
            phoNoTxt.setText("");
            oldPhoNoTxt.setText("");
        }
        try {
            customer.showPrsonContactDetails(customerContactDetails);
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Error occurred while loading employee contact data", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_phoNoDeleteButtonActionPerformed

    private void phoNoClearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phoNoClearButtonActionPerformed
        // TODO add your handling code here:
        phoNoEmpIDTxt.setText("");
        phoNoTxt.setText("");
        oldPhoNoTxt.setText("");
    }//GEN-LAST:event_phoNoClearButtonActionPerformed

    private void customerDetailsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_customerDetailsMouseClicked
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) customerDetails.getModel();

        int selectedRow = customerDetails.getSelectedRow();

        // Check if a row is selected
        if (selectedRow != -1) {
            String tabCusID = getStringValue(model.getValueAt(selectedRow, 0));
            String tabCusName = getStringValue(model.getValueAt(selectedRow, 1));
            String tabCusType = getStringValue(model.getValueAt(selectedRow, 2)).trim();
            String tabCusNIC = getStringValue(model.getValueAt(selectedRow, 3));
            String tabCusAdd = getStringValue(model.getValueAt(selectedRow, 4));
            String tabCusUserName = getStringValue(model.getValueAt(selectedRow, 5));
            String tabCusPassword = getStringValue(model.getValueAt(selectedRow, 6));

            // Update your UI components with the values
            cusIDTxt.setText(tabCusID);
            cusNameTxt.setText(tabCusName);
            cusTypeTxt.setSelectedItem(tabCusType);
            NICTxt.setText(tabCusNIC);
            cusAddTxt.setText(tabCusAdd);
            cusUsernameTxt.setText(tabCusUserName);
            cusPasswordTxt.setText(tabCusPassword);
        }
    }//GEN-LAST:event_customerDetailsMouseClicked

    private void customerContactDetailsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_customerContactDetailsMouseClicked
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) customerContactDetails.getModel();

        int selectedRow = customerContactDetails.getSelectedRow();

        if (selectedRow != -1) {
            String tabCusID = getStringValue(model.getValueAt(selectedRow, 0));
            String tabPhoneNumber = getStringValue(model.getValueAt(selectedRow, 1));

            phoNoEmpIDTxt.setText(tabCusID);
            oldPhoNoTxt.setText(tabPhoneNumber);

        }
    }//GEN-LAST:event_customerContactDetailsMouseClicked

    private void searchCustomerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchCustomerButtonActionPerformed
        // TODO add your handling code here:
        MainSearchCustomerUI mainSearchCustomerUI = new MainSearchCustomerUI();
        mainSearchCustomerUI.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_searchCustomerButtonActionPerformed

    private void paymentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paymentActionPerformed
        // TODO add your handling code here:
        MainPayment mainPayment = new MainPayment();
        mainPayment.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_paymentActionPerformed

    private String getStringValue(Object value) {
        return (value != null) ? value.toString() : "";
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainCustomerUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainCustomerUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainCustomerUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainCustomerUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainCustomerUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel CustomerBackground;
    private javax.swing.JToggleButton Dashboard;
    private javax.swing.JTextField NICTxt;
    private javax.swing.JButton addButton;
    private javax.swing.JButton addPhoNoBurtton;
    private javax.swing.JToggleButton backToLogin;
    private javax.swing.JButton clearButton;
    private javax.swing.JButton close;
    private javax.swing.JTextArea cusAddTxt;
    private javax.swing.JTextField cusIDTxt;
    private javax.swing.JTextField cusNameTxt;
    private javax.swing.JTextField cusPasswordTxt;
    private javax.swing.JComboBox<String> cusTypeTxt;
    private javax.swing.JTextField cusUsernameTxt;
    private javax.swing.JTable customerContactDetails;
    private javax.swing.JTable customerDetails;
    private javax.swing.JButton deleteButton;
    private javax.swing.JToggleButton employee;
    private javax.swing.JButton getOrUpdateQrButton;
    private javax.swing.JToggleButton hardware;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField oldPhoNoTxt;
    private javax.swing.JToggleButton payment;
    private javax.swing.JButton phoNoClearButton;
    private javax.swing.JButton phoNoDeleteButton;
    private javax.swing.JTextField phoNoEmpIDTxt;
    private javax.swing.JTextField phoNoTxt;
    private javax.swing.JButton phoNoUpdateButton;
    private javax.swing.JToggleButton repair;
    private javax.swing.JButton searchCustomerButton;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables
}
